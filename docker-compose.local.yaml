name: generator-saas-local

services:
  web:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules
      - next-cache:/app/.next
    command: sh -c "npm ci && npm run dev"
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    environment:
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: "1"
      WATCHPACK_POLLING: "true"
      PORT: "3000"
      HOSTNAME: "0.0.0.0"
    depends_on:
      - mongo
      #mongo:
        # condition: service_healthy
    restart: unless-stopped

  mongo:
    image: mongo:7
    restart: unless-stopped
    environment:
      # Se mudar aqui, o volume PRECISA ser novo
      MONGODB_URL: ${MONGODB_URL:-mongodb://root:root@mongo:27017/ui-shelf?authSource=admin}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-root}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    # healthcheck:
    #   # $$ para escapar $ dentro do compose
    #   test:
    #     [
    #       "CMD-SHELL",
    #       "mongosh --norc --quiet 'mongodb://$$MONGO_INITDB_ROOT_USERNAME:$$MONGO_INITDB_ROOT_PASSWORD@127.0.0.1:27017/admin?authSource=admin' --eval 'db.runCommand({ ping: 1 }).ok' | grep -q 1"
    #     ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 40
    #   start_period: 20s

volumes:
  mongo-data:
  next-cache:
